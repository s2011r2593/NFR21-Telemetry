{"version":3,"sources":["components/sidebar/Toggle.jsx","components/shared/BasicContainer.jsx","components/shared/VertSpacer.jsx","components/sidebar/SensorButton.jsx","components/sidebar/SensorDropdown.jsx","components/sidebar/GroupDropDown.jsx","components/sidebar/SensorSelector.jsx","components/sidebar/NameInput.jsx","assets/logo.png","components/sidebar/Sidebar.jsx","components/main/topbar/SearchBar.jsx","components/shared/HorizSpacer.jsx","assets/upload.svg","components/main/topbar/Upload.jsx","components/main/topbar/SVGButton.jsx","components/shared/RowHolder.jsx","assets/stop.svg","assets/play.svg","assets/pause.svg","components/main/topbar/ButtonTray.jsx","components/shared/StyledStatus.jsx","components/main/topbar/Topbar.jsx","components/main/data-display/NumGraphToggle.jsx","assets/scrollleft.svg","assets/scrollright.svg","assets/zoomin.svg","assets/zoomout.svg","components/main/data-display/Graph.jsx","components/main/data-display/Graphs.jsx","components/main/data-display/Number.jsx","components/shared/VertIndicator.jsx","components/shared/Context.jsx","components/main/data-display/Numbers.jsx","components/main/data-display/DataDisplay.jsx","components/main/Main.jsx","App.jsx","index.js"],"names":["Toggle","props","Holder","ToggleButton","active","isLive","onClick","setIsLive","Circle","styled","div","BasicContainer","Container","isFlex","flex","expand","scroll","children","VertSpacer","Spacer","SensorButton","state","e","previous","this","selectedSensors","setCurrentSensors","filter","element","label","target","value","forceUpdate","StyledButton","removeSelected","SmallVertSpace","Component","button","SensorDropdown","options","ExampleSensorsByGroups","map","e1","group","selectedGroup","sensors","e2","i","id","flat","selected","prevProps","updateSelectedGroup","updateOptions","newSelectedGroup","setState","indexOf","concat","closeMenuOnSelect","placeholder","isMulti","every","onChange","addSelected","styles","multiValueLabel","base","width","length","clearSelected","GroupDropDown","SmallVerticalSpacer","StyledSelect","setSelectedGroup","ExampleGroups","StyledOption","select","option","SensorSelector","useState","SelectorContainer","newState","currentSensors","NameInput","focus","setFocus","input","setInput","StyledInput","type","onInput","onFocus","onBlur","setSessionName","onKeyDown","keyCode","blur","handleKeyPress","Sidebar","SidebarContainer","src","logo","alt","SearchBar","SearchContainer","HorizSpacer","ButtonSpacer","ButtonTray","setFile","uploadRef","useRef","UploadHolder","hidden","ref","f","files","handleFiles","Clickable","upload","height","current","click","img","SVGButton","StyledSVG","setViewState","RowHolder","StyledHolder","Topbar","stop","viewState","play","pause","StyledStatus","Status","valid","display","receiving","NumGraphToggle","handleClick","dispType","setDispType","ReferenceFrame","StyledDiv","LabelHolder","Label","Overlay","isLeft","t","initData","time","arr","obj","Math","floor","random","push","initialise","getX","d","getY","xScaleInit","scaleLinear","domain","max","range","yScaleInit","Graph","curveType","lineData","xScale","yScale","start","end","n","graphData","wheelTimeout","updateScales","gd","slice","zoom","dir","amt","rerender","useEffect","cancelWheel","preventDefault","document","body","addEventListener","passive","removeEventListener","GraphContainer","checkKey","updateData","scrollleft","scrollright","zoomin","zoomout","SVGContainer","sensorName","onWheel","clearTimeout","setTimeout","abs","deltaX","deltaY","handleMouseScroll","fill","size","refX","rx","ry","Group","left","graph_offset","GridRows","scale","stroke","GridColumns","top","AxisBottom","AxisLeft","j","r","cx","cy","LinePath","curve","allCurves","data","x","y","strokeWidth","strokeOpacity","shapeRendering","markerMid","markerStart","markerEnd","AreaClosed","Bar","Graphs","index","k","Number","ScuffedAF","spacing","onMouseEnter","sendIndex","NumberContainer","translucent","isDragging","hovering","Value","unit","percentage","toString","join","VertIndicator","Line","Context","React","createContext","ContextProvider","Consumer","mouseX","mouseY","dragging","setMouseCoords","setDragging","Provider","numberWidth","numberHeight","Numbers","context","useContext","dndRect","setRect","xRanges","setxRanges","yRanges","setyRanges","startInd","setStartInd","hoverInd","setHoverInd","magicNumbers","setMagic","dndRef","window","handleResize","console","log","ranges","getRanges","getItemIndex","temp","splice","right","bottom","getBoundingClientRect","itemsPerRow","spaceSize","fullRows","extraItems","extraSize","tempX","Array","tempY","tempE","ind","scrollHeight","NumberTray","className","DataDisplay","scrollAmt","whatthefuck","containerRef","setContainerRef","updateWidth","content","clientWidth","handleScroll","scrollTop","onScroll","Main","MainContainer","App","onMouseDown","clientX","clientY","handleMouseDown","onMouseUp","handleMouseUp","GlobalStyle","next","createGlobalStyle","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.73492861.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport default function Toggle(props) {\r\n  return (\r\n    <Holder>\r\n      <>\r\n        Live Data:\r\n      </>\r\n      <ToggleButton\r\n        active={props.isLive}\r\n        onClick={() => props.setIsLive(!props.isLive)}\r\n      >\r\n        <Circle active={props.isLive} />\r\n      </ToggleButton>\r\n    </Holder>\r\n  );\r\n}\r\n\r\nconst Holder = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst ToggleButton = styled.div`\r\n  width: 46px;\r\n  height: 24px;\r\n  position: relative;\r\n  background: ${props => (props.active ? '#42D060' : '#ebebeb')};\r\n  transition: background 0.2s ease;\r\n  border-radius: 12px;\r\n`;\r\n\r\nconst Circle = styled.div`\r\n  position: absolute;\r\n  top: 2px;\r\n  left: ${props => (props.active ? 24 : 2)}px;\r\n  width: 20px;\r\n  height: 20px;\r\n  border-radius: 50%;\r\n  background: #fff;\r\n  transition: left 0.2s ease;\r\n`;","import styled from 'styled-components';\r\n\r\nexport default function BasicContainer(props) {\r\n  return (\r\n    <Container isFlex={props.flex} expand={props.expand} scroll={props.scroll}>\r\n      {props.children}\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.div`\r\n  width: calc(100% - 18px);\r\n  border: 1px solid #818181;\r\n  border-radius: 9px;\r\n  padding: 8px;\r\n  height: ${props => (props.expand ? '100%' : 'auto')};\r\n  overflow-y: ${props => (props.scroll ? 'scroll' : 'visible')};\r\n  display: ${props => (props.isFlex ? 'flex' : 'auto')};\r\n  align-items: center;\r\n  justify-content: center;\r\n`;","import styled from 'styled-components';\r\n\r\nexport default function VertSpacer() {\r\n  return(\r\n    <Spacer />\r\n  );\r\n}\r\n\r\nconst Spacer = styled.div`\r\n  height: 20px;\r\n`;","\r\nimport {Component} from 'react'\r\nimport styled from 'styled-components'\r\nimport BasicContainer from \"../shared/BasicContainer\";\r\n\r\nclass SensorButton extends Component {\r\n    \r\n    removeSelected(e){\r\n        let previous = this.props.selectedSensors\r\n        this.props.setCurrentSensors(previous.filter((element) => element.label !== e.target.value))\r\n        this.forceUpdate()\r\n    }\r\n    state = {  }\r\n    render() { \r\n        return ( \r\n        <>\r\n            <BasicContainer>\r\n                <Holder>\r\n                    <>{this.props.label}</>\r\n                    <StyledButton\r\n                    onClick={e => this.removeSelected(e)}\r\n                    value={this.props.label}>\r\n                        ╳\r\n                    </StyledButton>\r\n                </Holder> \r\n            </BasicContainer>\r\n            <SmallVertSpace/>\r\n        </>\r\n        );\r\n    }\r\n}\r\nexport default SensorButton;\r\n\r\nconst Holder = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`\r\nlet StyledButton = styled.button`\r\n  width: 20px;\r\n  height: 20x;\r\n  font-size: 8px;\r\n  cursor: pointer;\r\n  border: 0px;\r\n  background-color: white;\r\n`\r\nlet SmallVertSpace = styled.div`\r\n  height: 5px;\r\n` ","import React, {Component} from 'react';\r\nimport Select from 'react-select';\r\nimport styled from \"styled-components\";\r\nimport SensorButton from './SensorButton';\r\n\r\nexport default class SensorDropdown extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        // all available sensor options\r\n        this.options = ExampleSensorsByGroups.map(e1 => (\r\n            e1.group === this.props.selectedGroup ? e1.sensors.map((e2, i) => ({value: e2, label: e2, id: i})) : []\r\n        )).flat();\r\n        // only sensors selected by user from available options\r\n        this.selected = []\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {                                           \r\n        if (prevProps.selectedGroup !== this.props.selectedGroup) {\r\n            this.updateSelectedGroup(this.props.selectedGroup)\r\n            this.updateOptions(this.props.selectedGroup)\r\n        }\r\n    }\r\n    updateSelectedGroup(newSelectedGroup) {\r\n        this.setState({selectedGroup: newSelectedGroup}) \r\n    }\r\n    updateOptions(newSelectedGroup) {\r\n        this.options = ExampleSensorsByGroups.map(e1 => (\r\n            e1.group === this.props.selectedGroup ? e1.sensors.map((e2, i) => ({value: e2, label: e2, id: i})) : []\r\n        )).flat();\r\n    }\r\n\r\n    addSelected(value){\r\n        if (value != null && -1 === this.props.selectedSensors.indexOf(value[0])){\r\n          this.props.setCurrentSensors(this.props.selectedSensors.concat(value))\r\n        }\r\n    }\r\n\r\n    clearSelected(e){\r\n      this.props.setCurrentSensors([])\r\n    }\r\n\r\n    removeSelected(e){\r\n        let previous = this.props.selectedSensors\r\n        this.props.setCurrentSensors(previous.filter((element) => element.label !== e.target.value))\r\n        this.forceUpdate()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Select\r\n                closeMenuOnSelect={false}\r\n                placeholder={\"Select from \" + this.props.selectedGroup + \"...\"}\r\n                isMulti={true}\r\n                options={this.options.filter((element) => (this.props.selectedSensors.every((e) => e.label !== element.label)))}\r\n                value={this.props.selectedGroup}\r\n                onChange={(e) => this.addSelected(e)}\r\n                styles={{\r\n                    multiValueLabel: (base) => ({\r\n                      ...base,\r\n                      width:'100px',\r\n                      'font-size':'16px'\r\n                    }),\r\n                  }}\r\n                />\r\n                <SmallVertSpace/>\r\n                {this.props.selectedSensors.length !== 0 &&  <StyledButton onClick={e => this.clearSelected()}>Clear All</StyledButton>}\r\n                {this.props.selectedSensors.map((e) => \r\n                (<SensorButton \r\n                  onClick={this.removeSelected} \r\n                  label={e.label} \r\n                  selectedSensors={this.props.selectedSensors} \r\n                  setCurrentSensors={this.props.setCurrentSensors}/>))}\r\n            </>\r\n\r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\n//{this.selected.map((x) => (<p>{x.label}</p>))}\r\nlet ExampleSensorsByGroups = [\r\n    {group:\"Safety Sensors\", sensors: [\"Sensor A\", \"Sensor B\", \"Sensor C\", \"Sensor Q\", \"Sensor R\", \"Sensor S\", \"Sensor T\", \"Sensor U\", \"Sensor V\"]},\r\n    {group:\"Chasis Sensors\", sensors: [\"Sensor D\", \"Sensor E\", \"Sensor F\"]},\r\n    {group:\"Aero Sensors\", sensors: [\"Sensor G\", \"Sensor H\", \"Sensor I\"]},\r\n    {group:\"Suspension Sensors\", sensors: [\"Sensor J\", \"Sensor K\", \"Sensor L\"]},\r\n    {group:\"Powertrain Sensors\", sensors: [\"Sensor M\", \"Sensor N\", \"Sensor O\"]}\r\n  ];\r\n\r\n\r\nlet StyledButton = styled.button`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n\r\n  cursor: pointer;\r\n  border: 0px;\r\n  background-color: white;\r\n`\r\nlet SmallVertSpace = styled.div`\r\n  height: 10px;\r\n`","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\n\r\n\r\nexport default function GroupDropDown(props){\r\n\r\n    const handleOption = (i) => {\r\n        props.setSelectedGroup(i.target.value)\r\n    }\r\n \r\n    return (\r\n        <>\r\n            <>Select Sensor Group:</>\r\n            <SmallVerticalSpacer></SmallVerticalSpacer>\r\n            <StyledSelect onChange={handleOption}>\r\n             {ExampleGroups.map((e, i) => \r\n                (<StyledOption key={i}>{e.group}</StyledOption>))}\r\n            </StyledSelect>\r\n        </>\r\n    )\r\n}\r\n\r\n// update so that the selector fills the container\r\nexport const StyledSelect = styled.select`\r\n    width: 220px;\r\n    height: 30px;\r\n    font-size: 14px;\r\n    font-family: 'Open Sans';\r\n    cursor: pointer;\r\n`;\r\nexport const StyledOption = styled.option`\r\n    font-size: 14px;\r\n    cursor: pointer;\r\n`;\r\n\r\nexport const SmallVerticalSpacer = styled.div`\r\n    height: 10px;\r\n`;\r\n\r\nlet ExampleGroups = [\r\n    {id: 1, group:\"Safety Sensors\"},\r\n    {id: 2, group:\"Chasis Sensors\"},\r\n    {id: 3, group:\"Aero Sensors\"},\r\n    {id: 4, group:\"Suspension Sensors\"},\r\n    {id: 5, group:\"Powertrain Sensors\"}\r\n];","import { useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport BasicContainer from '../shared/BasicContainer';\r\nimport VertSpacer from '../shared/VertSpacer';\r\nimport SensorDropdown from './SensorDropdown';\r\nimport GroupDropDown from './GroupDropDown';\r\n\r\nexport default function SensorSelector(props) {\r\n  let [selectedGroup, setSelectedGroup] = useState('Safety Sensors');\r\n\r\n  return(\r\n    <SelectorContainer>\r\n      <BasicContainer>\r\n        <GroupDropDown \r\n        selectedGroup={selectedGroup}\r\n        setSelectedGroup={(newState) => setSelectedGroup(newState)}\r\n        />\r\n      </BasicContainer>\r\n      <VertSpacer />\r\n      <BasicContainer expand>\r\n        <SensorDropdown \r\n        selectedGroup={selectedGroup}\r\n        selectedSensors={props.currentSensors}\r\n        setCurrentSensors={(newState) => props.setCurrentSensors(newState)}\r\n        />\r\n      </BasicContainer>\r\n    </SelectorContainer>\r\n  );\r\n}\r\n\r\nconst SelectorContainer = styled.div`\r\n  width: 100%;\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\n\r\n","import { useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport BasicContainer from '../shared/BasicContainer';\r\n\r\nexport default function NameInput(props) {\r\n  let [focus, setFocus] = useState(false);\r\n  let [input, setInput] = useState('');\r\n\r\n  const handleKeyPress = (e) => {\r\n      if (e.keyCode === 13) {\r\n          e.target.blur();\r\n      }\r\n  }\r\n\r\n  const handleBlur = () => {\r\n      setFocus(false);\r\n      props.setSessionName(input);\r\n  }\r\n\r\n  return(\r\n    <BasicContainer flex>\r\n        <StyledInput \r\n            type=\"text\" \r\n            placeholder = \"Enter Session Name.\"\r\n            value={input}\r\n            onInput={(e) => setInput(e.target.value)}\r\n            onFocus={(e) => setFocus(true)}\r\n            onBlur={(e) => handleBlur()}\r\n            onKeyDown={(e) => {handleKeyPress(e)}}\r\n            focus={focus}\r\n        />\r\n    </BasicContainer>\r\n  );\r\n}\r\n\r\nconst StyledInput = styled.input`\r\n    border: none;\r\n    padding-top: 3px;\r\n    width: 100%;\r\n    font-weight: ${props => (props.focus ? \"normal\" : \"bold\")} ;\r\n    ::placeholder {\r\n        font-weight: normal;\r\n    }\r\n    text-overflow: ellipsis;\r\n    :focus {\r\n        outline: none;\r\n    }\r\n`;","export default __webpack_public_path__ + \"static/media/logo.7c344053.png\";","import { useEffect } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport Toggle from './Toggle';\r\nimport SensorSelector from './SensorSelector';\r\nimport NameInput from './NameInput';\r\nimport BasicContainer from '../shared/BasicContainer';\r\nimport VertSpacer from '../shared/VertSpacer';\r\n\r\nimport logo from '../../assets/logo.png';\r\n\r\nexport default function Sidebar(props) {\r\n  return (\r\n    <SidebarContainer>\r\n      <img src={logo} alt='NU Formula Logo' />\r\n      <VertSpacer />\r\n      <BasicContainer>\r\n        <Toggle isLive={props.isLive} setIsLive={(newState) => props.setIsLive(newState)} />\r\n      </BasicContainer>\r\n      <VertSpacer />\r\n      {props.isLive &&\r\n        <>\r\n          <NameInput setSessionName={(newState) => props.setSessionName(newState)}/>\r\n          <VertSpacer />\r\n        </>\r\n      }\r\n      <SensorSelector\r\n        currentSensors={props.currentSensors}\r\n        setCurrentSensors={(newState) => props.setCurrentSensors(newState)}\r\n      />\r\n    </SidebarContainer>\r\n  );\r\n}\r\n\r\nconst SidebarContainer = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 240px;\r\n  height: calc(100vh - 60px);\r\n  padding: 30px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;","import styled from \"styled-components\";\r\n\r\nexport default function SearchBar() {\r\n  return(\r\n    <SearchContainer placeholder='Enter Name or Date'></SearchContainer>\r\n  );\r\n}\r\n\r\nconst SearchContainer = styled.input`\r\n  border: 1px solid #818181;\r\n  border-radius: 9px;\r\n  padding: 8px;\r\n  flex: 1;\r\n  margin-top: 10px;\r\n  margin-bottom: 10px; // Renders weird on web but works in electron\r\n`;","import styled from \"styled-components\";\r\n\r\nexport default function HorizSpacer() {\r\n  return(\r\n    <ButtonSpacer />\r\n  );\r\n}\r\n\r\nconst ButtonSpacer = styled.div`\r\n  width: 20px;\r\n`;","export default __webpack_public_path__ + \"static/media/upload.23c86021.svg\";","import { useRef, useState } from 'react';\r\nimport styled from \"styled-components\";\r\n\r\nimport HorizSpacer from \"../../shared/HorizSpacer\";\r\n\r\nimport upload from '../../../assets/upload.svg';\r\n\r\nexport default function ButtonTray() {\r\n  const [file, setFile] = useState(null)\r\n\r\n  const uploadRef = useRef(null);\r\n\r\n  const handleFiles = (e) => {\r\n    let f = e.target.files[0];\r\n    setFile(f);\r\n  }\r\n\r\n  return(\r\n    <UploadHolder>\r\n      <input type='file' hidden ref={uploadRef} onChange={(e) => {handleFiles(e)}} />\r\n      <HorizSpacer />\r\n      <Clickable src={upload} alt='upload' width='25px' height='25px' onClick={() => {uploadRef.current.click()}} />\r\n      <HorizSpacer />\r\n    </UploadHolder>\r\n  );\r\n}\r\n\r\nconst UploadHolder = styled.div`\r\n  flex: 0.1;\r\n  max-width: 110px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: right;\r\n`;\r\n\r\nconst Clickable = styled.img`\r\n  cursor: pointer;\r\n`;","import styled from 'styled-components';\r\n\r\nexport default function SVGButton(props) {\r\n  return(\r\n    <StyledSVG\r\n      src={props.src}\r\n      alt={props.label}\r\n      width='25px'\r\n      height='25px'\r\n      onClick={() => {props.setViewState(props.label)}}\r\n      selected={props.selected}\r\n    />\r\n  );\r\n}\r\n\r\nconst StyledSVG = styled.img`\r\n  cursor: pointer;\r\n  filter: brightness(${props => (props.selected ? 0.5 : 1)});\r\n  transition: 0.07s ease;\r\n`;","import styled from \"styled-components\";\r\n\r\nexport default function RowHolder(props) {\r\n  return(\r\n    <StyledHolder>\r\n      {props.children}\r\n    </StyledHolder>\r\n  );\r\n}\r\n\r\nconst StyledHolder = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;","export default __webpack_public_path__ + \"static/media/stop.a5149737.svg\";","export default __webpack_public_path__ + \"static/media/play.04c7d97b.svg\";","export default __webpack_public_path__ + \"static/media/pause.d6780492.svg\";","import SVGButton from './SVGButton';\r\nimport RowHolder from '../../shared/RowHolder';\r\nimport HorizSpacer from '../../shared/HorizSpacer';\r\n\r\nimport stop from '../../../assets/stop.svg';\r\nimport play from '../../../assets/play.svg';\r\nimport pause from '../../../assets/pause.svg';\r\n\r\nexport default function Topbar(props) {\r\n  return (\r\n    <RowHolder>\r\n      <SVGButton\r\n        src={stop}\r\n        label={'stop'}\r\n        setViewState={props.setViewState}\r\n        selected={props.viewState === 'stop'}\r\n      />\r\n      <HorizSpacer />\r\n      {props.viewState !== 'play'\r\n        ? <SVGButton\r\n            src={play}\r\n            label={'play'}\r\n            setViewState={props.setViewState}\r\n            selected={props.viewState === 'pause'}\r\n          />\r\n        : <SVGButton\r\n            src={pause}\r\n            label={'pause'}\r\n            setViewState={props.setViewState}\r\n            selected={props.viewState === 'play'}\r\n          />\r\n      }\r\n    </RowHolder>\r\n  );\r\n}","import styled from 'styled-components';\r\n\r\nexport default function StyledStatus(props) {\r\n  return(\r\n    <Status valid={props.valid}>\r\n      {props.children}\r\n    </Status>\r\n  );\r\n}\r\n\r\nconst Status = styled.div`\r\n  color: ${props => (props.valid ? '#42D060' : '#BE0707')}\r\n`;","import styled from 'styled-components';\r\n\r\nimport SearchBar from './SearchBar';\r\nimport Upload from './Upload';\r\nimport ButtonTray from './ButtonTray';\r\nimport RowHolder from '../../shared/RowHolder';\r\nimport StyledStatus from '../../shared/StyledStatus';\r\n\r\nexport default function Topbar(props) {\r\n\r\n  var display;\r\n  if (props.isLive) {\r\n    display =\r\n      <>\r\n        <RowHolder>\r\n          Status:\r\n          {props.receiving\r\n            ? <StyledStatus valid> Reading Live Data</StyledStatus> // Keep whitespace before text\r\n            : <StyledStatus> No Data Received</StyledStatus>            // Keep whitespace before text\r\n          }\r\n        </RowHolder>\r\n        <ButtonTray viewState={props.viewState} setViewState={props.setViewState} />\r\n      </>;\r\n  } else {\r\n    display =\r\n    <>\r\n      <SearchBar />\r\n      <Upload />\r\n    </>;\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      {display}\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.div`\r\n  width: calc(100% + 16px);\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;","import styled from 'styled-components';\r\n\r\nexport default function NumGraphToggle(props) {\r\n  const handleClick = () => {\r\n    if (props.dispType === 'graphs') {\r\n      props.setDispType('numbers');\r\n    } else {\r\n      props.setDispType('graphs');\r\n    }\r\n  }\r\n\r\n  return(\r\n    <ReferenceFrame>\r\n      <StyledDiv>\r\n        <LabelHolder onClick={() => handleClick()}>\r\n          <Label active={props.dispType === 'graphs'}>Graph</Label>\r\n          <Label active={props.dispType === 'numbers'}>Number</Label>\r\n        </LabelHolder>\r\n        <Overlay onClick={() => handleClick()} isLeft={props.dispType === 'graphs'} />\r\n      </StyledDiv>\r\n    </ReferenceFrame>\r\n  );\r\n}\r\n\r\nconst ReferenceFrame = styled.div`\r\n  position: relative;\r\n  float: right;\r\n  right: 136px;\r\n  top: -42px;\r\n`;\r\n\r\nconst StyledDiv = styled.div`\r\n  width: 136px;\r\n  height: 34px;\r\n  top: 0;\r\n  left: 0;\r\n  position: absolute;\r\n`;\r\n\r\nconst LabelHolder = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  border-radius: 8px;\r\n  background: #fafafa;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nconst Label = styled.div`\r\n  color: ${props => (props.active ? '#000' : '#838181')};\r\n  font-size: 12px;\r\n  z-index: 1;\r\n  flex: 1;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  transition: all 0.1s ease;\r\n`;\r\n\r\nconst Overlay = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: ${props => (props.isLeft ? 0 : 68)}px;\r\n  width: 68px;\r\n  height: 100%;\r\n  background-color: #e5e4fB;\r\n  display: inline;\r\n  border-top-left-radius: ${props => (props.isLeft ? 8 : 0)}px;\r\n  border-bottom-left-radius: ${props => (props.isLeft ? 8 : 0)}px;\r\n  border-top-right-radius: ${props => (props.isLeft ? 0 : 8)}px;\r\n  border-bottom-right-radius: ${props => (props.isLeft ? 0 : 8)}px;\r\n  transition: all 0.1s ease;\r\n`;","export default __webpack_public_path__ + \"static/media/scrollleft.021006b1.svg\";","export default __webpack_public_path__ + \"static/media/scrollright.87918043.svg\";","export default __webpack_public_path__ + \"static/media/zoomin.ffee9cd4.svg\";","export default __webpack_public_path__ + \"static/media/zoomout.25ba6bef.svg\";","import React, { useContext, useMemo, useCallback, useState, useEffect, useRef } from 'react'\r\nimport { extent, max, bisector } from 'd3-array';\r\nimport { MarkerArrow, MarkerCross, MarkerX, MarkerCircle, MarkerLine } from '@visx/marker';\r\nimport { useTooltip } from '@visx/tooltip';\r\nimport { localPoint } from '@visx/event';\r\nimport { Group } from '@visx/group';\r\nimport { LinePath, Bar, Line, stackOffset, AreaClosed } from '@visx/shape';\r\nimport * as allCurves from '@visx/curve';\r\nimport { scaleTime, scaleLinear } from '@visx/scale';\r\nimport { AxisLeft, AxisBottom } from '@visx/axis';\r\nimport styled from \"styled-components\";\r\nimport scrollleft from '../../../assets/scrollleft.svg';\r\nimport scrollright from '../../../assets/scrollright.svg';\r\nimport zoomin from '../../../assets/zoomin.svg';\r\nimport zoomout from '../../../assets/zoomout.svg';\r\nimport { GridRows, GridColumns } from '@visx/grid';\r\n\r\nlet t = -1; // init time\r\nconst n = 30; // amount of seconds to show\r\nconst duration = 750;\r\nlet initData = initialise(); //data arr\r\n\r\nfunction initialise() {\r\n    var time = -1;\r\n    var arr = [];\r\n    for (var i = 0; i < n; i++) {\r\n        var obj = {\r\n            time: ++time,\r\n            value: Math.floor(Math.random() * 100)\r\n        };\r\n        arr.push(obj);\r\n    }\r\n    t = time;\r\n    return arr;\r\n}\r\n\r\nconst height = 300\r\nconst width = 800\r\n\r\nconst getX = (d) => d.time;\r\nconst getY = (d) => d.value;\r\n\r\n\r\nconst graph_offset = 30\r\n\r\n// scales\r\nlet xScaleInit = scaleLinear({\r\n    domain: [max(initData, getX) - n + 1, max(initData, getX)],\r\n    range: [0, width - 3*graph_offset]\r\n});\r\n\r\nlet yScaleInit = scaleLinear({\r\n    domain: [0, max(initData, getY)],\r\n    range: [height * 0.85, height * 0.1]\r\n});\r\n\r\nexport default function Graph(props) {\r\n    const curveType = 'curveLinear'\r\n    const [graphData, setGD] = useState({lineData: initData, xScale: xScaleInit, yScale: yScaleInit, start:0, end:n-1});\r\n    const wheelTimeout = useRef()\r\n\r\n    function updateScales(gd){\r\n        gd.xScale = scaleLinear({\r\n            domain: [getX(gd.lineData[Math.floor(gd.start)]), getX(gd.lineData[Math.floor(gd.end)])],\r\n            range: [0, width - 3*graph_offset]\r\n        });\r\n        gd.yScale = scaleLinear({\r\n            domain: [0, max(gd.lineData.slice(Math.floor(gd.start), Math.floor(gd.end)), getY)],\r\n            range: [height * 0.85, height * 0.1]\r\n        })\r\n    }\r\n    function updateData(gd) {\r\n        t++;\r\n        gd.start++;\r\n        gd.end++;\r\n        var obj = {\r\n            time: t,\r\n            value: Math.floor(Math.random() * 100)\r\n        };\r\n        gd.lineData.push(obj); // push new data into data set\r\n        // gd.xScale.domain([getX(gd.lineData[Math.floor(gd.start)]), getX(gd.lineData[Math.floor(gd.end)])]); // update scales\r\n        // gd.yScale.domain([0, max(gd.lineData.slice(Math.floor(gd.start), Math.floor(gd.end)), getY)]);\r\n        updateScales(gd);\r\n        props.rerender();\r\n    }\r\n\r\n    function handleMouseScroll(e){\r\n        let gd = graphData;\r\n        let dir;\r\n        let scroll_amt = 0.2;\r\n        let zoom_amt = 0.2;\r\n        \r\n        // while wheel is moving, do not release the lock\r\n        clearTimeout(wheelTimeout.current)\r\n\r\n        // flag indicating to lock page scrolling (setTimeout returns a number)\r\n        wheelTimeout.current = setTimeout(() => {\r\n        wheelTimeout.current = false\r\n        }, 300)\r\n\r\n        if (Math.abs(e.deltaX) > Math.abs(e.deltaY) && Math.abs(e.deltaX) > 1){\r\n            (e.deltaX < 0) ? dir = \"right\" : dir = \"left\"\r\n            scroll(gd, dir, scroll_amt)\r\n        } else {\r\n            (e.deltaY < 0) ? dir = \"in\" : dir = \"out\"\r\n            zoom(gd, dir, zoom_amt)\r\n        }\r\n    }\r\n\r\n    function zoom(gd, dir, amt){\r\n        if (dir == \"in\"){\r\n            if (gd.start < max(gd.lineData, getX)) {\r\n                gd.start+= amt\r\n            };\r\n        } else if (dir == \"out\"){\r\n            if (gd.start > amt) {\r\n                gd.start-= amt\r\n            } \r\n        }\r\n        updateScales(gd);\r\n        props.rerender();\r\n    }\r\n\r\n    function scroll(gd, dir, amt){\r\n        if (dir == \"right\"){\r\n            if (gd.end < max(gd.lineData, getX) - amt) {\r\n                gd.start+= amt\r\n                gd.end+= amt\r\n            };\r\n        } else if (dir == \"left\"){\r\n            if (gd.start > amt) {\r\n                gd.start-= amt\r\n                gd.end-= amt\r\n            }\r\n        }\r\n        updateScales(gd);\r\n        props.rerender();\r\n    }\r\n\r\n    function checkKey(e) {\r\n        if (e.keyCode == '38') { zoom(graphData, \"in\", 1) // up arrow \r\n        } else if (e.keyCode == '40') { zoom(graphData, \"out\", 1) // down arrow\r\n        } else if (e.keyCode == '37') { scroll(graphData, \"left\", 1) // left arrow \r\n        } else if (e.keyCode == '39') { scroll(graphData, \"right\", 1) // right arrow\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const cancelWheel = e => wheelTimeout.current && e.preventDefault()\r\n        document.body.addEventListener('wheel', cancelWheel, {passive:false})\r\n        return () => document.body.removeEventListener('wheel', cancelWheel)\r\n    }, [])\r\n\r\n    // const { showTooltip,\r\n    //     tooltipData,\r\n    //     hideTooltip,\r\n    //     tooltipTop = 0,\r\n    //     tooltipLeft = 0, } = useTooltip();\r\n\r\n    // tooltip handler\r\n    // const handleTooltip = useCallback(\r\n    //     (event) => {\r\n    //       let { x } = localPoint(event) || { x: (graph_offset*2) }; // x of mouse\r\n    //       x -= (graph_offset*2)\r\n    //       const x0 = xScale.invert(x); // maps x -> time \r\n    //       const index = bisectDate(allData, x0, 1); // finds index of the middle time\r\n    //       const d0 = allData[index - 1]; \r\n    //       const d1 = allData[index];\r\n    //       let d = d0;\r\n    //       if (d1 && getX(d1)) {\r\n    //         d = x0.valueOf() - getX(d0).valueOf() > getX(d1).valueOf() - x0.valueOf() ? d1 : d0;\r\n    //       }\r\n    //       showTooltip({\r\n    //         tooltipData: d,\r\n    //         tooltipLeft: xScale(getX(d)),\r\n    //         tooltipTop: yScale(getY(d)),\r\n    //       });\r\n    //     },\r\n    //     [showTooltip, yScale, xScale],\r\n    //   );\r\n  return (\r\n        <GraphContainer onKeyDown={(e) => checkKey(e)}>\r\n            <button onClick={() => updateData(graphData)}>update</button> <br/>\r\n            <ButtonTray width={width}>\r\n                <div>\r\n                <Clickable src={scrollleft} alt='scroll left' width='25px' height='25px' onClick={() => {scroll(graphData, \"left\", 1)}} />\r\n                <Clickable src={scrollright} alt='scroll right' width='25px' height='25px' onClick={() => {scroll(graphData, \"right\", 1)}} />\r\n                </div>\r\n                <Clickable src={zoomin} alt='zoom in' width='25px' height='25px' onClick={() => {zoom(graphData, \"in\", 1)}} />\r\n                <Clickable src={zoomout} alt='zoom out' width='25px' height='25px' onClick={() => {zoom(graphData, \"out\", 1)}} />\r\n            </ButtonTray>\r\n            <SVGContainer width={width}>\r\n            <div>{props.sensorName}</div>\r\n            <svg width={width} height={height} onWheel={(e) => handleMouseScroll(e)}>\r\n                <MarkerCircle id=\"marker-circle\" fill=\"#5048E5\" size={1} refX={2} />\r\n                <rect width={width} height={height } fill=\"#fff\" rx={14} ry={14} />\r\n                <Group left={graph_offset*2}>\r\n                <GridRows scale={graphData.yScale} width={width - graph_offset*3} stroke=\"#e0e0e0\"/>\r\n                    <GridColumns scale={graphData.xScale} height={height-60} stroke=\"#e0e0e0\" top={30}/>\r\n                    <AxisBottom left={0} top={height-45} scale={graphData.xScale} stroke='#838181' label={\"bottom axis label\"}/>\r\n                    <AxisLeft left={0} scale={graphData.yScale} stroke='#838181' label={\"left axis label\"}/>\r\n                    {graphData.lineData.slice(Math.floor(graphData.start), Math.floor(graphData.end)).map((d, j) => (\r\n                        <circle\r\n                        key={j}\r\n                        r={2}\r\n                        cx={graphData.xScale(getX(d))}\r\n                        cy={graphData.yScale(getY(d))}\r\n                        stroke=\"#5048E5\"\r\n                        />\r\n                    ))}\r\n                    <LinePath\r\n                    curve={allCurves[curveType]}\r\n                    data={graphData.lineData.slice(Math.floor(graphData.start), Math.floor(graphData.end))}\r\n                    x={(d) => graphData.xScale(getX(d)) ?? 0}\r\n                    y={(d) => graphData.yScale(getY(d)) ?? 0}\r\n                    stroke=\"#5048E5\"\r\n                    strokeWidth={2}\r\n                    strokeOpacity={1}\r\n                    shapeRendering=\"geometricPrecision\"\r\n                    markerMid=\"url(#marker-circle)\"\r\n                    markerStart=\"url(#marker-circle)\"\r\n                    markerEnd=\"url(#marker-circle)\"\r\n                    />\r\n                    <AreaClosed\r\n                        fill=\"#5048E515\"\r\n                        curve={allCurves[curveType]}\r\n                        data={graphData.lineData.slice(Math.floor(graphData.start), Math.floor(graphData.end))}\r\n                        x={(d) => graphData.xScale(getX(d)) ?? 0}\r\n                        y={(d) => graphData.yScale(getY(d)) ?? 0}\r\n                        yScale={graphData.yScale}\r\n                    />\r\n                    <Bar\r\n                        x={0}\r\n                        y={0}\r\n                        width={width}\r\n                        height={height}\r\n                        fill=\"transparent\"\r\n                        rx={14}\r\n                    //   onTouchStart={handleTooltip}\r\n                    //   onTouchMove={handleTooltip}\r\n                    //   onMouseMove={handleTooltip}\r\n                    //   onMouseLeave={() => hideTooltip()}\r\n                    />\r\n                    {/* {tooltipData && (\r\n                    <Zoom>\r\n                    {(zoom) => ( \r\n                    <g style={{ cursor: zoom.isDragging ? 'grabbing' : 'grab', touchAction: 'none' }}\r\n                    ref={zoom.containerRef}>\r\n                        <Line\r\n                        from={{ x: tooltipLeft, y: height * 0.08 }}\r\n                        to={{ x: tooltipLeft, y: height * 0.9}}\r\n                        stroke=\"#5048E5\"\r\n                        strokeWidth={2}\r\n                        pointerEvents=\"none\"\r\n                        strokeDasharray=\"5,2\"\r\n                        />\r\n                        <circle\r\n                        cx={tooltipLeft}\r\n                        cy={tooltipTop + 1}\r\n                        r={4}\r\n                        fill=\"black\"\r\n                        fillOpacity={0.1}\r\n                        stroke=\"black\"\r\n                        strokeOpacity={0.1}\r\n                        strokeWidth={2}\r\n                        pointerEvents=\"none\"\r\n                        />\r\n                        <circle\r\n                        cx={tooltipLeft}\r\n                        cy={tooltipTop}\r\n                        r={4}\r\n                        fill=\"#5048E5\"\r\n                        stroke=\"white\"\r\n                        strokeWidth={2}\r\n                        pointerEvents=\"none\"\r\n                        />\r\n                        <div>\r\n                        <TooltipWithBounds\r\n                            key={Math.random()}\r\n                            top={tooltipTop + 150}\r\n                            left={tooltipLeft + 40}\r\n                        >\r\n                            {`${getY(tooltipData)}`}\r\n                        </TooltipWithBounds>\r\n                        </div>\r\n                    </g>\r\n                    )}\r\n                    </Zoom>\r\n                    )} */}\r\n                </Group>\r\n                    );\r\n          </svg>\r\n          </SVGContainer>\r\n          {/* {tooltipData && (\r\n            <div>\r\n              <TooltipWithBounds\r\n                key={Math.random()}\r\n                top={tooltipTop + 150}\r\n                left={tooltipLeft + 40}\r\n              >\r\n                {`${getY(tooltipData)}`}\r\n              </TooltipWithBounds>\r\n            </div>\r\n          )} */}\r\n        </GraphContainer>\r\n    )}\r\n\r\nconst Clickable = styled.img`\r\n  cursor: pointer;\r\n`;\r\n\r\nconst ButtonTray = styled.div`\r\n  display: flex;\r\n  align-items: flex-end;\r\n  flex-direction: column;\r\n  position: absolute;\r\n  top: 30px;\r\n  left: ${props=> props.width - 40}px ;\r\n`\r\n\r\nconst GraphContainer = styled.div`\r\n  position: relative;\r\n`;\r\n\r\nconst SVGContainer = styled.div`\r\n  border-radius: 14px;\r\n  border: 1px solid #838181;\r\n  padding: 10px;\r\n  width: ${props=> props.width}px;\r\n`","import Graph from './Graph';\r\nimport VertSpacer from '../../shared/VertSpacer';\r\n\r\nexport default function Graphs(props) {\r\n  return (\r\n    <>\r\n      {props.sensors.map((e, index) => {\r\n        return (\r\n          <div key={index}>\r\n            {index !== 0 && <VertSpacer />}\r\n            <Graph width={props.width} sensorName={e.label} k={index} rerender={() => {props.rerender()}}/>\r\n          </div>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n}","import styled from 'styled-components';\r\n\r\nexport default function Number(props) {\r\n  return(\r\n    <ScuffedAF spacing={props.spacing} onMouseEnter={() => {props.sendIndex()}}>\r\n      <NumberContainer translucent={props.isDragging} hovering={props.hovering}>\r\n        <Value>{props.value}</Value>\r\n        <Label unit>{props.unit}</Label>\r\n        <Label>{props.label}</Label>\r\n      </NumberContainer>\r\n    </ScuffedAF>\r\n  );\r\n}\r\n\r\nconst ScuffedAF = styled.div`\r\n  margin-left: -${props => props.spacing}px;\r\n  margin-right: -${props => props.spacing}px;\r\n  padding-left: ${props => props.spacing}px;\r\n  padding-right: ${props => props.spacing}px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst NumberContainer = styled.div`\r\n  width: 240px;\r\n  height: 190px;\r\n  border-radius: 8px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border: 1px solid #424242;\r\n  user-select: none;\r\n  opacity: ${props => ((props.translucent) ? '0.4' : '1')};\r\n`;\r\n\r\nconst Value = styled.div`\r\n  font-size: 72px;\r\n  color: ${props => ([\"hsl(\",((props.percentage)*120).toString(10),\",75%,50%)\"].join(\"\"))};\r\n`;\r\n\r\nconst Label = styled.div`\r\n  color: ${props => (props.unit ? '#000' : '#818181')};\r\n  margin-bottom: 10px;\r\n`;","import styled from 'styled-components';\r\n\r\nexport default function VertIndicator(props) {\r\n  return(\r\n    <Line height={props.height} x={props.x} y={props.y} />\r\n  )\r\n}\r\n\r\nconst Line = styled.div`\r\n  height: ${props => props.height}px;\r\n  border-left: 2px solid black;\r\n  position: fixed;\r\n  left: ${props => props.x}px;\r\n  top: ${props => props.y}px;\r\n`;","import React, { Component } from 'react';\r\n\r\nconst Context = React.createContext(null);\r\nconst ContextConsumer = Context.Consumer;\r\n\r\nclass ContextProvider extends Component{\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      mouseX: 0,\r\n      mouseY: 0,\r\n      dragging: false,\r\n      setMouseCoords: (x, y) => {\r\n        this.setState({ mouseX: x, mouseY: y });\r\n      },\r\n      setDragging: (x) => {\r\n        this.setState({ dragging: x });\r\n      }\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport { Context, ContextProvider, ContextConsumer }","import { useRef, useEffect, useState, useContext } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport Number from './Number';\r\nimport VertIndicator from '../../shared/VertIndicator';\r\n\r\nimport { Context } from '../../shared/Context';\r\n\r\nconst numberWidth = 240;\r\nconst numberHeight = 190;\r\n\r\nexport default function Numbers(props) {\r\n  let context = useContext(Context);\r\n\r\n  const [dndRect, setRect] = useState(0);\r\n  const [xRanges, setxRanges] = useState([]);\r\n  const [yRanges, setyRanges] = useState([]);\r\n  const [startInd, setStartInd] = useState(0);\r\n  const [hoverInd, setHoverInd] = useState(0);\r\n  const [magicNumbers, setMagic] = useState([0, 0]);\r\n  const dndRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('resize', handleResize);\r\n    handleResize();\r\n\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (dndRect) {\r\n      console.log(dndRect);\r\n      let ranges = getRanges();\r\n      setxRanges(ranges[0]);\r\n      setyRanges(ranges[1]);\r\n    }\r\n  }, [dndRect, props]);\r\n\r\n  useEffect(() => {\r\n    let x = context.mouseX;\r\n    let y = context.mouseY;\r\n    console.log(y);\r\n\r\n    if (!context.dragging) {\r\n      let temp = props.sensors[startInd];\r\n      props.sensors.splice(startInd, 1);\r\n      props.sensors.splice(hoverInd, 0, temp);\r\n      props.setCurrentSensors(props.sensors);\r\n    } else {\r\n      setStartInd(getItemIndex(x, y));\r\n      setHoverInd(getItemIndex(x, y));\r\n    }\r\n  }, [context.dragging]);\r\n\r\n  const getItemIndex = (x, y) => {\r\n    let index = 0;\r\n    if ((dndRect.left > x) || (dndRect.right < x) || (dndRect.bottom < y) || (dndRect.top > y)) {\r\n      return startInd;\r\n    }\r\n    for (let i = 0; i < magicNumbers[2]; i++) {\r\n      for (let j = 0; j < magicNumbers[3]; j++) {\r\n        if ((y < (yRanges[index] + numberHeight)) && (x < xRanges[index] + (numberWidth / 2) + magicNumbers[0])) {\r\n          return index\r\n        }\r\n        index++;\r\n      }\r\n    }\r\n    for (let i = 0; i < magicNumbers[4]; i++) {\r\n      if ((y < (yRanges[index] + numberHeight)) && (x < xRanges[index] + (numberWidth / 2) + magicNumbers[1])) {\r\n        return index\r\n      }\r\n      index++;\r\n    }\r\n  }\r\n\r\n  const handleResize = () => {\r\n    if (dndRef.current) {\r\n      setRect(dndRef.current.getBoundingClientRect());\r\n    }\r\n  }\r\n\r\n  const getRanges = () => {\r\n    let itemsPerRow = Math.floor(dndRect.width / numberWidth);\r\n    let spaceSize = (dndRect.width - (itemsPerRow * numberWidth)) / (2 * itemsPerRow);\r\n    let fullRows = Math.floor(props.sensors.length / itemsPerRow);\r\n\r\n    let extraItems = props.sensors.length % itemsPerRow;\r\n    let extraSize = (dndRect.width - (extraItems * numberWidth)) / (2 * extraItems);\r\n\r\n    setMagic([spaceSize, extraSize, fullRows, itemsPerRow, extraItems]);\r\n\r\n    let tempX = Array(((itemsPerRow * fullRows) + extraItems));\r\n    let tempY = Array(((itemsPerRow * fullRows) + extraItems));\r\n    let tempE = Array(((itemsPerRow * fullRows) + extraItems));\r\n    for (let i = 0; i < itemsPerRow; i++) {\r\n      let x = dndRect.x +  (spaceSize + (numberWidth / 2)) + (i * (numberWidth + (2 * spaceSize)));\r\n      for (let j = 0; j < fullRows; j++) {\r\n        let ind = i + (j * itemsPerRow);\r\n        tempX[ind] = x;\r\n\r\n        let y = j * (numberHeight + 14) + dndRect.y + 13;\r\n        tempY[ind] = y - props.scrollHeight;\r\n\r\n        if (i === 0 || i === itemsPerRow - 1) {\r\n          tempE[ind] = 1;\r\n        } else {\r\n          tempE[ind] = 0;\r\n        }\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < extraItems; i++) {\r\n      let x = dndRect.x + (extraSize + (numberWidth / 2)) + (i * (numberWidth + (2 * extraSize)));\r\n      tempX[(itemsPerRow * fullRows) + i] = x;\r\n      \r\n      let y = fullRows * (numberHeight + 14) + dndRect.y + 13;\r\n      tempY[i + (fullRows * itemsPerRow)] = y - props.scrollHeight;\r\n    }\r\n\r\n    return [tempX, tempY];\r\n  }\r\n\r\n  const handleHover = (i) => {\r\n    setHoverInd(i);\r\n    if (!context.dragging) {\r\n      setStartInd(i);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <NumberTray\r\n      className=\"numbers\"\r\n      ref={dndRef}\r\n    >\r\n      {\r\n        (hoverInd !== startInd && context.dragging) &&\r\n        <VertIndicator\r\n          height={numberHeight}\r\n          x={xRanges[hoverInd] + ((2 * (xRanges[hoverInd] > xRanges[startInd]) * (yRanges[hoverInd] === yRanges[startInd])) - 1)*((numberWidth / 2) + magicNumbers[+ (hoverInd > (magicNumbers[2] * magicNumbers[3]))] + 1)}\r\n          y={yRanges[hoverInd] - 12}\r\n        />\r\n      }\r\n      {props.sensors.map((e, index) => {\r\n        console.log(e);\r\n        return (\r\n          <Number\r\n            value={e.id*30}\r\n            percentage={e.id}\r\n            unit={'m/s'}\r\n            label={e.label}\r\n            key={index}\r\n            isDragging={index === startInd && context.dragging}\r\n            hovering={index === hoverInd && context.dragging}\r\n            sendIndex={() => {handleHover(index)}}\r\n            spacing={magicNumbers[+ (index >= (magicNumbers[2] * magicNumbers[3]))]}\r\n          />\r\n        );\r\n      })}\r\n    </NumberTray>\r\n  );\r\n}\r\n\r\nconst NumberTray = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  width: 100%;\r\n  margin-top: -12px;\r\n  > * {\r\n    margin-top: 12px;\r\n  }\r\n`;","import React, { Component, createRef } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport NumGraphToggle from './NumGraphToggle';\r\nimport Graphs from './Graphs';\r\nimport Numbers from './Numbers';\r\n\r\nimport StyledStatus from '../../shared/StyledStatus';\r\n\r\nexport default class DataDisplay extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      dispType: 'graphs',\r\n      scrollAmt: 0,\r\n      whatthefuck: true,\r\n    }\r\n\r\n    this.containerRef = null;\r\n\r\n    this.setContainerRef = (element) => {\r\n      this.containerRef = element;\r\n    }\r\n\r\n    this.updateWidth = () => {\r\n      if (this.containerRef) {\r\n        this.content = (this.state.dispType==='graphs')\r\n          ? <Graphs\r\n              viewState={this.props.viewState}\r\n              sensors={this.props.sensors}\r\n              setCurrentSensors={(newState) => this.props.setCurrentSensors(newState)}\r\n              width={this.containerRef ? this.containerRef.clientWidth - 16 : 0}\r\n              rerender={() => {this.setState({ whatthefuck: true })}}\r\n            />\r\n          : <Numbers\r\n              viewState={this.props.viewState}\r\n              sensors={this.props.sensors}\r\n              setCurrentSensors={(newState) => this.props.setCurrentSensors(newState)}\r\n            />;\r\n        this.setState({ whatthefuck: true });\r\n      }\r\n    }\r\n\r\n    this.handleScroll = () => {\r\n      const scrollAmt = this.containerRef.scrollTop;\r\n      this.setState({ scrollAmt });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('resize', this.updateWidth);\r\n    this.updateWidth();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.updateWidth);\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <Container ref={this.setContainerRef} onScroll={this.handleScroll}>\r\n        <NumGraphToggle\r\n          dispType={this.state.dispType}\r\n          setDispType={(x) => this.setState({ dispType: x })}\r\n        />\r\n        {(this.props.sensors && this.props.sensors.length > 0)\r\n          ? this.state.dispType==='graphs'\r\n            ? <Graphs\r\n                viewState={this.props.viewState}\r\n                sensors={this.props.sensors}\r\n                setCurrentSensors={(newState) => this.props.setCurrentSensors(newState)}\r\n                width={this.containerRef ? this.containerRef.clientWidth - 16 : 0}\r\n                rerender={() => {this.setState({ whatthefuck: true })}}\r\n              />\r\n            : <Numbers\r\n                viewState={this.props.viewState}\r\n                scrollHeight={this.state.scrollAmt}\r\n                sensors={this.props.sensors}\r\n                setCurrentSensors={(newState) => this.props.setCurrentSensors(newState)}\r\n              />\r\n          : <StyledStatus>No Selected Sensors</StyledStatus>\r\n        }\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  border: 1px solid #818181;\r\n  border-radius: 9px;\r\n  padding: 8px;\r\n  height: 100%;\r\n  padding-top: 50px;\r\n  overflow-y: scroll;\r\n  ::-webkit-scrollbar-thumb {\r\n    background-color: #dadce0;\r\n    border: 4px solid transparent;\r\n    border-radius: 8px;\r\n    background-clip: padding-box;  \r\n  }\r\n  \r\n  ::-webkit-scrollbar {\r\n    width: 16px;\r\n  }\r\n`;","import { useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport Topbar from './topbar/Topbar';\r\nimport DataDisplay from './data-display/DataDisplay';\r\nimport VertSpacer from '../shared/VertSpacer';\r\n\r\nexport default function Main(props) {\r\n  let [viewState, setViewState] = useState('stop');\r\n\r\n  return(\r\n    <MainContainer>\r\n      <Topbar\r\n        isLive={props.isLive}\r\n        receiving={false}\r\n        viewState={viewState}\r\n        setViewState={(newState) => setViewState(newState)}\r\n      />\r\n      <VertSpacer />\r\n      <DataDisplay\r\n        viewState={viewState}\r\n        sensors={props.currentSensors}\r\n        setCurrentSensors={(newState) => props.setCurrentSensors(newState)}\r\n      />\r\n    </MainContainer>\r\n  );\r\n}\r\n\r\nconst MainContainer = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 300px;\r\n  height: calc(100vh - 80px);\r\n  width: calc(100vw - 420px);\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding-left: 60px;\r\n  padding-right: 60px;\r\n  padding-bottom: 30px;\r\n  padding-top: 50px;\r\n`;","import styled from 'styled-components';\r\n\r\nimport { useState, useContext, useEffect } from 'react';\r\nimport { createGlobalStyle } from 'styled-components';\r\n\r\nimport Sidebar from './components/sidebar/Sidebar';\r\nimport Main from './components/main/Main';\r\n\r\nimport { Context } from './components/shared/Context';\r\n\r\nexport default function App() {\r\n  let context = useContext(Context);\r\n\r\n  var [isLive, setIsLive] = useState(false);\r\n  var [currentSensors, setCurrentSensors] = useState([]);\r\n  var [sessionName, setSessionName] = useState('');\r\n\r\n  const handleMouseDown = (e) => {\r\n    context.setMouseCoords(e.clientX, e.clientY);\r\n    context.setDragging(true);\r\n  }\r\n\r\n  const handleMouseUp = (e) => {\r\n    context.setMouseCoords(e.clientX, e.clientY);\r\n    context.setDragging(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log('WHAT')\r\n  }, [currentSensors])\r\n\r\n  return (\r\n    <div onMouseDown={(e) => {handleMouseDown(e)}} onMouseUp={(e) => {handleMouseUp(e)}}>\r\n      <GlobalStyle/>\r\n      <Sidebar\r\n        isLive={isLive} setIsLive={(next) => setIsLive(next)}\r\n        currentSensors={currentSensors} setCurrentSensors={(newState) => setCurrentSensors(newState)}\r\n        setSessionName={(newState) => setSessionName(newState)}\r\n      />\r\n      <Main\r\n        isLive={isLive}\r\n        currentSensors={currentSensors} setCurrentSensors={(newState) => setCurrentSensors(newState)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  body {\r\n    margin: 0;\r\n    font-family: 'Open Sans', sans-serif;\r\n  }\r\n`;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\nimport { ContextProvider } from './components/shared/Context';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ContextProvider>\r\n      <App />\r\n    </ContextProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}